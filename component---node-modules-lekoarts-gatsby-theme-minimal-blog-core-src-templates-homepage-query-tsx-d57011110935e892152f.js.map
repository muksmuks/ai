{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-d57011110935e892152f.js","mappings":"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","sources":["webpack://Mukesh K's - The Art of AI/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/list.tsx","webpack://Mukesh K's - The Art of AI/./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack://Mukesh K's - The Art of AI/./src/@lekoarts/gatsby-theme-minimal-blog/texts/bottom.mdx","webpack://Mukesh K's - The Art of AI/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/homepage.tsx","webpack://Mukesh K's - The Art of AI/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack://Mukesh K's - The Art of AI/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack://Mukesh K's - The Art of AI/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://Mukesh K's - The Art of AI/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack://Mukesh K's - The Art of AI/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx","webpack://Mukesh K's - The Art of AI/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/seo.tsx"],"sourcesContent":["/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx } from \"theme-ui\"\n\ntype ListProps = {\n  children: React.ReactNode\n}\n\nconst List = ({ children }: ListProps) => (\n  <section\n    sx={{\n      mb: [5, 5, 6],\n      ul: { margin: 0, padding: 0 },\n      li: { listStyle: `none`, mb: 3, a: { variant: `links.listItem` } },\n      variant: `section_bottom`,\n    }}\n  >\n    {children}\n  </section>\n)\n\nexport default List\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components), {Text} = _components;\n  if (!Text) _missingMdxReference(\"Text\", true);\n  return React.createElement(React.Fragment, null, React.createElement(Text, {\n    children: `Hi. I'm Mukesh, Senior AI Scientist`,\n    sx: {\n      fontSize: [2, 3, 4],\n      fontWeight: `bold`,\n      color: `heading`\n    }\n  }), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"I design, build machine learning products.\"), \"\\n\", React.createElement(_components.li, null, \"Write, speak, and prototype on ideas in machine learning, artificial intelligence and LLMs.\"), \"\\n\", React.createElement(_components.li, null, \"Curate papers, guides on applying machine learning effectively\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const {Title} = Object.assign({}, _provideComponents(), props.components);\n  if (!Title) _missingMdxReference(\"Title\", true);\n  return React.createElement(Title, {\n    text: \"Most Popular\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { HeadFC, Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport Title from \"./title\"\nimport Listing from \"./listing\"\nimport List from \"./list\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport { visuallyHidden } from \"../styles/utils\"\nimport Seo from \"./seo\"\nimport Hero from \"../texts/hero.mdx\"\nimport Bottom from \"../texts/bottom.mdx\"\n\nexport type MBHomepageProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n}\n\nconst Homepage = ({ posts }: MBHomepageProps) => {\n  const { basePath, blogPath } = useMinimalBlogConfig()\n  const { siteTitle } = useSiteMetadata()\n\n  return (\n    <Layout>\n      <h1 sx={visuallyHidden}>{siteTitle}</h1>\n      <section sx={{ mb: [5, 6, 7], p: { fontSize: [1, 2, 3], mt: 2 }, variant: `section_hero` }}>\n        <Hero />\n      </section>\n      <Title text=\"Latest Posts\">\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>Read all posts</Link>\n      </Title>\n      <Listing posts={posts} showTags={false} />\n      <List>\n        <Bottom />\n      </List>\n    </Layout>\n  )\n}\n\nexport default Homepage\n\nexport const Head: HeadFC = () => <Seo />\n","import { graphql } from \"gatsby\"\nimport HomepageComponent, { Head } from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport { Head }\n\nexport const query = graphql`\n  query ($formatString: String!) {\n    allPost(sort: { date: DESC }, limit: 3) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Homepage, { Head } from \"../../../components/homepage\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreHomepage({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Homepage posts={allPost.nodes} {...props} />\n}\n\nexport { Head }\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Box } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <Link to={post.slug} sx={(t) => ({ ...t.styles?.a, fontSize: [1, 2, 3], color: `text` })}>\n      {post.title}\n    </Link>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` — `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n","import * as React from \"react\"\nimport { withPrefix } from \"gatsby\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\n\ntype SEOProps = {\n  title?: string\n  description?: string\n  pathname?: string\n  image?: string\n  children?: React.ReactNode\n  canonicalUrl?: string\n}\n\nconst Seo = ({\n  title = ``,\n  description = ``,\n  pathname = ``,\n  image = ``,\n  children = null,\n  canonicalUrl = ``,\n}: SEOProps) => {\n  const site = useSiteMetadata()\n\n  const {\n    siteTitle,\n    siteTitleAlt: defaultTitle,\n    siteUrl,\n    siteDescription: defaultDescription,\n    siteImage: defaultImage,\n    author,\n    siteLanguage,\n  } = site\n\n  const seo = {\n    title: title ? `${title} | ${siteTitle}` : defaultTitle,\n    description: description || defaultDescription,\n    url: `${siteUrl}${pathname || ``}`,\n    image: `${siteUrl}${image || defaultImage}`,\n  }\n  return (\n    <>\n      <html lang={siteLanguage} />\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta property=\"og:title\" content={seo.title} />\n      <meta property=\"og:url\" content={seo.url} />\n      <meta property=\"og:description\" content={seo.description} />\n      <meta property=\"og:image\" content={seo.image} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta property=\"og:image:alt\" content={seo.description} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:image:alt\" content={seo.description} />\n      <meta name=\"twitter:creator\" content={author} />\n      <meta name=\"gatsby-theme\" content=\"@lekoarts/gatsby-theme-minimal-blog\" />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"32x32\" href={withPrefix(`/favicon-32x32.png`)} />\n      <link rel=\"icon\" type=\"image/png\" sizes=\"16x16\" href={withPrefix(`/favicon-16x16.png`)} />\n      <link rel=\"apple-touch-icon\" sizes=\"180x180\" href={withPrefix(`/apple-touch-icon.png`)} />\n      {canonicalUrl ? <link rel=\"canonical\" href={canonicalUrl} /> : null}\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["_ref","children","jsx","sx","mb","ul","margin","padding","li","listStyle","a","variant","_createMdxContent","props","_components","Object","assign","_provideComponents","components","Text","id","component","Error","_missingMdxReference","React","fontSize","fontWeight","color","wrapper","MDXLayout","Title","text","posts","basePath","blogPath","useMinimalBlogConfig","siteTitle","useSiteMetadata","Layout","visuallyHidden","p","mt","Hero","Link","to","replaceSlashes","Listing","showTags","List","Bottom","Head","Seo","data","allPost","Homepage","nodes","tags","tagsPath","map","tag","i","key","slug","t","_t$styles","styles","name","post","Box","title","date","ItemTags","className","BlogListItem","description","pathname","image","canonicalUrl","site","siteTitleAlt","defaultTitle","siteUrl","siteDescription","defaultDescription","siteImage","defaultImage","author","siteLanguage","seo","url","lang","content","property","rel","type","sizes","href","withPrefix"],"sourceRoot":""}